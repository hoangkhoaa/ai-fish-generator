version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fish-generate
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - MONGO_URI=mongodb://fishuser:yourpassword@mongodb:27017/fish_generator?authSource=admin
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - NEWSAPI_KEY=${NEWSAPI_KEY}
      - METALPRICE_API_KEY=${METALPRICE_API_KEY}
      - WEATHER_INTERVAL=${WEATHER_INTERVAL:-6}
      - PRICE_INTERVAL=${PRICE_INTERVAL:-12}
      - NEWS_INTERVAL=${NEWS_INTERVAL:-12}
      - USE_AI=${USE_AI:-true}
      - TEST_MODE=${TEST_MODE:-false}
    ports:
      - "8080:8080"
    volumes:
      - ./logs:/app/logs
    networks:
      - fish-network

  mongodb:
    image: mongo:6
    container_name: fish-mongodb
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27018:27017"
    networks:
      - fish-network
    environment:
      - MONGO_INITDB_DATABASE=fish_generator
      - MONGO_INITDB_ROOT_USERNAME=fishuser
      - MONGO_INITDB_ROOT_PASSWORD=yourpassword
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

networks:
  fish-network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local 